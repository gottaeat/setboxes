[Unit]
After=sys-subsystem-net-devices-guest.device systemd-networkd.service
Wants=sys-subsystem-net-devices-guest.device systemd-networkd.service

[Install]
WantedBy=multi-user.target

[Service]
Type=oneshot
RemainAfterExit=yes
PrivateNetwork=yes
PrivateMounts=no

# create a named netns and swap the systemd one to it
ExecStart=/usr/bin/flock --no-fork -- /var/run/netns.lock /usr/bin/env ip netns add lan_guest
ExecStart=/usr/bin/env umount /var/run/netns/lan_guest
ExecStart=/usr/bin/env mount --bind /proc/self/ns/net /var/run/netns/lan_guest

# create veth pair
ExecStart=nsenter -t 1 -n -- ip link add lan_guest_veth0 type veth peer name lan_guest_veth1

# configure pid 1 ns veth
ExecStart=nsenter -t 1 -n -- ip addr add 10.69.1.0/31 dev lan_guest_veth0
ExecStart=nsenter -t 1 -n -- ip link set lan_guest_veth0 up

# configure lan_guest veth
ExecStart=nsenter -t 1 -n -- ip link set lan_guest_veth1 netns lan_guest
ExecStart=ip addr add 10.69.1.1/31 dev lan_guest_veth1
ExecStart=ip link set lan_guest_veth1 up

# move guest to lan_guest ns
ExecStart=nsenter -t 1 -n -- ip link set guest netns lan_guest
ExecStart=ip addr add 10.13.36.1/24 dev guest
ExecStart=ip link set guest up

# set lan_guest default route
ExecStart=ip route add default via 10.69.1.0 dev lan_guest_veth1

# masquerade
ExecStart=nft flush ruleset
ExecStart=nft 'add table ip lan_guest'
ExecStart=nft 'add chain ip lan_guest postrouting { type nat hook postrouting priority srcnat; policy accept; };'
ExecStart=nft 'add rule ip lan_guest postrouting oifname lan_guest_veth1 counter masquerade'

# add a route to the lan subnet so the router can hit it without netns exec
ExecStart=nsenter -t 1 -n -- ip route add 10.13.36.0/24 via 10.69.1.1 dev lan_guest_veth0

# move guest back to pid 1 ns and remove lan_guest ns and the static route
ExecStop=nsenter -t 1 -n -- ip route del 10.13.36.0/24 via 10.69.1.1 dev lan_guest_veth0
ExecStop=ip link set guest netns 1
ExecStop=ip netns delete lan_guest
