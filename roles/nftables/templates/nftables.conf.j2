#!/usr/bin/nft -f
flush ruleset

# base
define WAN_IF = { eth0, wlan0 }
define SSH_PORT = 3131
define VPN_IF = { {% for iface in mss_wireguard_ifaces %}{{ iface }}{% if not loop.last %}, {% endif %}{% endfor %} }

# docker
define DOCKER_IF = docker0
define DOCKER_VETH1_IP = 10.0.100.1

# table
table ip fw {
    # FILTER<-INPUT
    chain input {
        type filter hook input priority filter; policy drop;
        iifname "lo" counter accept
        ct state established,related counter accept
        iifname $DOCKER_IF counter accept
        iifname $VPN_IF counter accept
        iifname $WAN_IF tcp dport $SSH_PORT counter accept
        iifname $WAN_IF icmp type echo-request counter accept
    }

    # FILTER<-FORWARD
    chain filter_forward {
        type filter hook forward priority filter; policy drop;
        ct state established,related counter accept
        iifname $DOCKER_IF counter accept
        iifname $VPN_IF counter accept
        iifname $WAN_IF oifname $DOCKER_IF counter accept
    }

    # FILTER<-FORWARD (mangle)
    chain mangle_forward {
        type filter hook forward priority mangle; policy accept;
        iifname { $WAN_IF, $VPN_IF } tcp flags syn tcp option maxseg size set rt mtu counter
        oifname { $WAN_IF, $VPN_IF } tcp flags syn tcp option maxseg size set rt mtu counter
    }

    # FILTER<-OUTPUT
    chain output {
        type filter hook output priority filter; policy accept;
    }

    # NAT<-POSTROUTING
    chain postrouting {
        type nat hook postrouting priority srcnat; policy accept;
        iifname $DOCKER_IF oifname { $WAN_IF, $VPN_IF } counter masquerade
    }

    # NAT<-PREROUTING
    chain prerouting {
        type nat hook prerouting priority dstnat; policy accept;
    }
}

{% if "libvirt" in pkgs %}
define LIBVIRTD_IF = libvirtd0
define LIBVIRTD_VETH1_IP = 10.0.101.1
add rule ip fw input iifname $LIBVIRTD_IF counter accept
add rule ip fw filter_forward iifname $LIBVIRTD_IF counter accept
add rule ip fw filter_forward iifname $WAN_IF oifname $LIBVIRTD_IF counter accept
add rule ip fw postrouting iifname $LIBVIRTD_IF oifname { $WAN_IF, $VPN_IF } counter masquerade
{% endif %}

{% if "qbittorrent-nox" in pkgs %}
add rule ip fw input iifname $WAN_IF tcp dport 9091 counter accept
{% endif %}
