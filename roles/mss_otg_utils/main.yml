---
- name: build mss-otg<-utils
  include_role:
    name: handle_meson
  vars:
    project_url: "https://github.com/gottaeat/mss-otg"
    project_name: "otg-utils"
    baremetal_path: "/mnt/mss/stuff/techy-bits/git/mss-otg"
    build_dir: "utils/build"

- name: set otg ownership
  file:
    path: "/mss/{{ item }}"
    owner: root
    group: root
    recurse: true
  with_items:
    - "bin"
    - "etc"
    - "share"

- name: install symlinks for the bash-handler
  file:
    src: "/mss/share/bash-handler"
    dest: "{{ item }}"
    state: link
    force: true
  with_items:
    - "/etc/profile"
    - "/etc/bash.bashrc"

- name: install symlinks for aliases
  block:
    - name: /mss/repo
      file:
        src: "/mnt/mss/stuff/techy-bits/git/setboxes"
        dest: "/mss/repo"
        state: link
        force: true

    - name: /mss/work
      file:
        src: "/mnt/mss/stuff/techy-bits/work"
        dest: "/mss/work"
        state: link
        force: true

- name: setcake.py service for routers
  hosts: routers
  block:
    - name: derive wan iface name
      set_fact:
        setcake_iface: "{{ 'ppp0' if ppp_wan else 'wan' }}"

    - name: copy over unit file
      copy:
        src: setcake@.service
        dest: /etc/systemd/system
        owner: root
        group: root
        mode: '0644'
      register: setcake_unitfile_copy

    - name: daemon reload
      systemd_service:
        daemon_reload: true
      when: setcake_unitfile_copy.changed

    - name: set setcake state
      block:
        - name: enabled by default, if not in a vm
          systemd_service:
            name: "setcake@{{ setcake_iface }}.service"
            enabled: true
          when: in_vm

        - name: triggers, when on baremetal
          systemd_service:
            name: "setcake@{{ setcake_iface }}.service"
            state:
              "{{ \
                'restarted' if \
                  setcake_unitfile_copy.changed \
                else \
                  'started' \
              }}"
            enabled: true
          when: not in_vm
